import java.time.Instant;
import java.util.ArrayList;
import java.util.List;


public class StockMarket {


	public static double GBCE(List<Double> prices){
		double buff=1f;
		for (Double f:prices)
			buff*=f;

		return nRoot(buff,prices.size(),0);
	}

	public static double nRoot( double A,int n, double p) {
		if(A < 0) {
			System.err.println("A < 0");// we handle only real positive numbers
			return -1.0f;
		} else if(A == 0) {
			return 0;
		}
		double x_prev = A;
		double x = A / n;  // starting "guessed" value...
		while(Math.abs(x - x_prev) > p) {
			x_prev = x;
			x = ((n - 1.0) * x + A / Math.pow(x, n - 1.0)) / n;
		}
		return x;
	}


}
